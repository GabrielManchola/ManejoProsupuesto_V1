@model IEnumerable<IndiceCuentasViewModel>
@{

    ViewData["Title"] = "Cuentas";

    string formatearBalance(decimal balance){
        return Math.Abs(balance).ToString("N");
    }

    string obtenerClaseBalance(decimal balance)
    {
        return balance >= 0 ? "activo" : "pasivo";
    }

  
}

<h1>Cuentas</h1>

<a asp-action="Crear" class="btn btn-primary mb-3">Crear nuevo</a>

<div class="contenerdor-totales mb-3">

    <div>
        <div>
            <strong>Activos</strong>
        </div>
        <div class="activo">
            @formatearBalance(@Model.Where(y => y.Balance > 0).Sum(y => y.Balance))
        </div>
    </div>

    <div>
         <div>
            <strong>Pasivo</strong>
        </div>
        <div class="pasivo">
            @formatearBalance(@Model.Where(y => y.Balance < 0).Sum(y => y.Balance))
        </div>
    </div>

    <div>
        <div>
            <strong>Total</strong>
        </div>
        <div>
           @formatearBalance(@Model.Sum(x => x.Balance))
        </div>
    </div>

</div>

<div class="accordion acordeon-cuentas">
    @foreach (var tipoCuenta in Model)
    {
        <div class="accordion-item">

            <h2 class="accordion-header" id="cabecera1">
                @{
                    var id = tipoCuenta.TipoCuenta.Replace(" ", "");
                    var dataBSTarget = "#" + id;
                    var claseTipoCuenta = obtenerClaseBalance(tipoCuenta.Balance);
                }

                <button class="accordion-button" type="button" data-bs-toggle="collapse" data-bs-target="@dataBSTarget">
                    <span class="me-3">
                        <span><strong>@tipoCuenta.TipoCuenta</strong></span>
                        <span class="@claseTipoCuenta">@formatearBalance(tipoCuenta.Balance)</span>
                    </span>
                </button>
            </h2> 

            <div id="@id" class="accordion-collapse collapse show"> 
                <div>
                    <ul class="list-group">
                        @foreach (var cuenta in tipoCuenta.Cuentas)
                        {
                            var claseCuenta = obtenerClaseBalance(cuenta.Balance);
                            <li class="list-group-item">
                                <span>
                                    <strong><a asp-action="Detalle" asp-route-id="@cuenta.Id">@cuenta.Nombre</a></strong>
                                    <a asp-action="Editar" asp-route-id="@cuenta.Id" class="btn-primary btn ">
                                        <i class="bi-pencil-fill"></i>
                                    </a>
                                     <a asp-action="Borrar" asp-route-id="@cuenta.Id" class="btn-danger btn">
                                        <i class="bi-trash-fill"></i>
                                    </a>
                                </span>
                                <span class="@claseCuenta">@formatearBalance(cuenta.Balance)</span>
                            </li>
                        }
                    </ul>
                </div>
            </div>

        </div>
        
    }

</div>